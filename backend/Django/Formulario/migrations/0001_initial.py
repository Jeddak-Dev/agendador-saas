# Generated by Django 5.2.1 on 2025-06-10 23:17

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Establishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='establishment_logos/')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estabelecimento',
                'verbose_name_plural': 'Estabelecimentos',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING_PAYMENT', 'Aguardando Pagamento'), ('SCHEDULED', 'Agendado'), ('CONFIRMED', 'Confirmado'), ('COMPLETED', 'Concluído'), ('CANCELED', 'Cancelado'), ('NO_SHOW', 'Não Compareceu')], default='SCHEDULED', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pendente'), ('PAID', 'Pago'), ('REFUNDED', 'Estornado'), ('CANCELLED', 'Cancelado'), ('REJECTED', 'Rejeitado')], default='PENDING', max_length=50)),
                ('mercadopago_preference_id', models.CharField(blank=True, help_text='ID da preferência de pagamento no Mercado Pago', max_length=255, null=True)),
                ('mercadopago_payment_id', models.CharField(blank=True, help_text='ID da transação no Mercado Pago', max_length=255, null=True)),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_in_establishment', to='Formulario.establishment')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mercadopago_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response_data', models.JSONField(blank=True, null=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_detail', to='Formulario.appointment')),
            ],
            options={
                'verbose_name': 'Pagamento (Detalhes MP)',
                'verbose_name_plural': 'Pagamentos (Detalhes MP)',
            },
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='professional_photos/')),
                ('active', models.BooleanField(default=True)),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professionals', to='Formulario.establishment')),
            ],
            options={
                'verbose_name': 'Profissional',
                'verbose_name_plural': 'Profissionais',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='professional',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_as_professional', to='Formulario.professional'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_minutes', models.IntegerField(help_text='Duração do serviço em minutos')),
                ('active', models.BooleanField(default=True)),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='Formulario.establishment')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'unique_together': {('establishment', 'name')},
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_for_service', to='Formulario.service'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_client', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_owner', models.BooleanField(default=False)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.AddField(
            model_name='professional',
            name='user_account',
            field=models.OneToOneField(blank=True, help_text='Vincule a um usuário existente se o profissional tiver um login dedicado.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='professional_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('APPOINTMENT_CONFIRMATION', 'Confirmação de Agendamento'), ('APPOINTMENT_REMINDER', 'Lembrete de Agendamento'), ('APPOINTMENT_CANCELLATION', 'Cancelamento de Agendamento'), ('PAYMENT_SUCCESS', 'Pagamento Confirmado'), ('PAYMENT_FAILURE', 'Pagamento Recusado'), ('GENERAL', 'Geral')], default='GENERAL', max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='establishment',
            name='owner',
            field=models.ForeignKey(limit_choices_to={'is_owner': True}, on_delete=django.db.models.deletion.CASCADE, related_name='establishments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments_as_client', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recurring', models.BooleanField(default=False, help_text='Se for um feriado recorrente anualmente (ex: Natal)')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holidays', to='Formulario.establishment')),
            ],
            options={
                'verbose_name': 'Feriado/Exceção',
                'verbose_name_plural': 'Feriados/Exceções',
                'unique_together': {('establishment', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Domingo'), (1, 'Segunda'), (2, 'Terça'), (3, 'Quarta'), (4, 'Quinta'), (5, 'Sexta'), (6, 'Sábado')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='Formulario.professional')),
            ],
            options={
                'verbose_name': 'Disponibilidade',
                'verbose_name_plural': 'Disponibilidades',
                'unique_together': {('professional', 'day_of_week', 'start_time', 'end_time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='professional',
            unique_together={('establishment', 'name')},
        ),
    ]
